# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.

  # Ubuntu VM
  config.vm.define "lab-ubuntu-jammy" do |machine|
    machine.vm.box = "ubuntu/jammy64"
    machine.vm.hostname = "lab-ubuntu-jammy"
    machine.vm.network "private_network", ip: "192.168.56.14"
    machine.vm.boot_timeout = 300  # Reduced to 5 minutes
    
    # Provider-specific configuration for lab VM
    machine.vm.provider "virtualbox" do |vb|
      vb.name = "lab-ubuntu-jammy"
      vb.gui = false  # Disable GUI for faster boot
      vb.memory = "1024"  # Reduced memory for faster boot
      vb.cpus = "2"
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
      vb.customize [ "modifyvm", :id, "--natdnshostresolver1", "on" ]
      vb.customize [ "modifyvm", :id, "--natdnsproxy1", "on" ]
      vb.customize [ "modifyvm", :id, "--accelerate3d", "off" ]
      vb.customize [ "modifyvm", :id, "--audio", "none" ]
    end
    
    machine.vm.provision "shell", inline: <<-SHELL
     # Update package list
     apt-get update -qq
     
     # Install Docker prerequisites
     DEBIAN_FRONTEND=noninteractive apt-get install -y -qq \
       apt-transport-https \
       ca-certificates \
       curl \
       software-properties-common
     
     # Add Docker GPG key and repository
     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
     
     # Install Docker
     DEBIAN_FRONTEND=noninteractive apt-get update -qq
     DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce
     
     # Start Docker and add vagrant user to docker group
     systemctl start docker
     systemctl enable docker
     usermod -aG docker vagrant
     
     echo "Docker installation completed"
   SHELL
  end
  
  config.vm.define "agent-ubuntu-jammy" do |machine|
    machine.vm.box = "ubuntu/jammy64"
    machine.vm.hostname = "agent-ubuntu-jammy"
    machine.vm.network "private_network", ip: "192.168.56.15"
    machine.vm.boot_timeout = 300  # Reduced to 5 minutes
    
    # Provider-specific configuration for agent VM
    machine.vm.provider "virtualbox" do |vb|
      vb.name = "agent-ubuntu-jammy"
      vb.gui = false  # Disable GUI for faster boot
      vb.memory = "1024"  # Reduced memory for faster boot
      vb.cpus = "2"
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
      vb.customize [ "modifyvm", :id, "--natdnshostresolver1", "on" ]
      vb.customize [ "modifyvm", :id, "--natdnsproxy1", "on" ]
      vb.customize [ "modifyvm", :id, "--accelerate3d", "off" ]
      vb.customize [ "modifyvm", :id, "--audio", "none" ]
    end
    
    machine.vm.provision "shell", inline: <<-SHELL
     # Update package list
     apt-get update -qq
     
     # Install Docker prerequisites
     DEBIAN_FRONTEND=noninteractive apt-get install -y -qq \
       apt-transport-https \
       ca-certificates \
       curl \
       software-properties-common
     
     # Add Docker GPG key and repository
     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
     
     # Install Docker
     DEBIAN_FRONTEND=noninteractive apt-get update -qq
     DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce
     
     # Start Docker and add vagrant user to docker group
     systemctl start docker
     systemctl enable docker
     usermod -aG docker vagrant
     
     echo "Docker installation completed"
    SHELL
  end
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
#    config.vm.network "public_network"
  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

  # Windows Path
  # config.vm.synced_folder "F:\\scripts\\shellscripts", "/opt/scripts"

  # MacOS
  #  config.vm.synced_folder "/Users/imran/Desktop/scripts", "/opt/scripts"


  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  # (Provider settings are now configured per VM above)
end